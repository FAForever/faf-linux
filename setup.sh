#!/bin/bash
# Main setup script
set -e

DXVK_VERSION="1.7.2"
DFC_VERSION="1.2.3"
PROTON_VERSION="5.13"

JAVA_URL="https://github.com/AdoptOpenJDK/openjdk14-binaries/releases/download/jdk-14.0.2%2B12/OpenJDK14U-jdk_x64_linux_hotspot_14.0.2_12.tar.gz"
JAVAFX_URL="https://gluonhq.com/download/javafx-14-0-2-jmods-linux/"
DFC_ARCHIVE="dfc_unix_$(tr '.' '_' <<< "$DFC_VERSION").tar.gz"
DFC_EXTRACTED="downlords-faf-client-${DFC_VERSION}"
DFC_URL="https://github.com/FAForever/downlords-faf-client/releases/download/v${DFC_VERSION}/${DFC_ARCHIVE}"
DXVK_ARCHIVE="dxvk-${DXVK_VERSION}.tar.gz"
DXVK_EXTRACTED="dxvk-${DXVK_VERSION}"
DXVK_URL="https://github.com/doitsujin/dxvk/releases/download/v${DXVK_VERSION}/${DXVK_ARCHIVE}"
WINETRICKS_URL="https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks"

STEAM_PATH="$HOME/.local/share/Steam"
PROTON_PATH="$STEAM_PATH/steamapps/common/Proton $PROTON_VERSION"
STEAM_GAME_ID="9420"
GAME_PATH="$STEAM_PATH/steamapps/common/Supreme Commander Forged Alliance"
GAME_DATA_PATH="Local Settings/Application Data/Gas Powered Games/Supreme Commander Forged Alliance"

basedir="$(dirname $(readlink -f "${BASH_SOURCE[0]}"))"
cd "$basedir"

function block-print() {
    echo "============================================================"
    printf "$@"
    echo
    echo "============================================================"
}

if ! jq --version > /dev/null; then
    echo "jq not found. Please install jq."
    exit 1
fi

if [[ ! -d "$STEAM_PATH" ]]; then
    echo "Could not find Steam at $STEAM_PATH."
    exit 1
fi

if [[ ! -d "$PROTON_PATH" ]]; then
    echo "Proton $PROTON_VERSION does not seem to be installed."
    exit 1
fi

# when proton downloads, it does not automatically extract dist/
# ensure proton/dist actually exists
if [[ ! -d "$PROTON_PATH/dist" ]]; then
    echo
    echo "Proton $PROTON_VERSION does not appear to be extracted."
    echo "Please run Proton $PROTON_VERSION at least once."
    exit 1
fi

# initialize environment file
cat <<EOF > "$basedir/common-env"
# This file is automatically generated by setup.sh and will be overwritten
# when the script is run.

EOF

function write-env() {
    printf '%s="%s"\n' "$1" "$2" >> "$basedir/common-env"
}

wineprefix="$basedir/prefix"
write-env "wineprefix" "$wineprefix"
write-env "steam_path" "$STEAM_PATH"
write-env "proton_path" "$PROTON_PATH"
write-env "steam_game_id" "$STEAM_GAME_ID"
write-env "game_path" "$GAME_PATH"
write-env "game_data_path" "$wineprefix/drive_c/users/steamuser/$GAME_DATA_PATH"
write-env "dxvk_hud" "fps,compiler" # sane defaults, probably
write-env "dxvk_config_file" "$basedir/dxvk.conf"
write-env "enable_steam_integration" "1"
write-env "ice_adapter_debug" "1"

dxvk_cache_dir="$basedir/dxvk-cache"
mkdir -p "$dxvk_cache_dir"
write-env "dxvk_cache_dir" "$dxvk_cache_dir"

block-print "Downloading winetricks"
wget -O winetricks "$WINETRICKS_URL"
chmod a+x winetricks

block-print "Downloading FAF client"
wget -O "$DFC_ARCHIVE" "$DFC_URL"
block-print "Extracting FAF client"
tar -xvf "$DFC_ARCHIVE"
rm -v "$DFC_ARCHIVE"
write-env "dfc_path" "$DFC_EXTRACTED"

block-print "Downloading dxvk"
wget -O "$DXVK_ARCHIVE" "$DXVK_URL"
block-print "Extracting dxvk"
tar -xvf "$DXVK_ARCHIVE"
rm -v "$DXVK_ARCHIVE"
write-env "dxvk_path" "$DXVK_EXTRACTED"

block-print "Downloading java"
wget -O "java.tar.gz" "$JAVA_URL"
block-print "Downloading javafx"
wget -O "javafx.zip" "$JAVAFX_URL"
block-print "Extracting java"
java_path_orig="$(tar -tf "java.tar.gz" | head -n 1 | cut -d '/' -f 1)"
tar -xvf "java.tar.gz"
block-print "Extracting javafx"
pushd "$java_path_orig"
# what follows are multiple extremely bad hacks
unzip "../javafx.zip"
javafx_jmods_dir=("javafx-jmods-"*)
cp -rv "$javafx_jmods_dir/"* "jmods/"
rm -rv "$javafx_jmods_dir"
# unfortunately, adoptopenjdk does not provide java builds with javafx
# even more unfortunately, the openjfx "sdk" segfaults immediately
# to get a working JRE with javafx, we have to manually rebuild one with jlink
block-print "Rebuliding jre"
jmods="$(ls jmods | sed -E 's/\.jmod$//' | tr '\n' ',')"
java_path="${java_path_orig}-javafx"
bin/jlink -p jmods --add-modules "$jmods" --output "../$java_path"
popd
write-env java_path "$java_path"
rm -rv "$java_path_orig"

pushd "$DXVK_EXTRACTED"
# patch dxvk to work with proton
patch setup_dxvk.sh "$basedir/setup_dxvk.sh.patch"
popd

block-print "Wineboot"
"$basedir/launchwrapper-env" wine wineboot -u
block-print "Running winetricks"
"$basedir/launchwrapper-env" "$basedir/winetricks" d3dx9
block-print "Installing dxvk"
"$basedir/launchwrapper-env" "$basedir/${DXVK_EXTRACTED}/setup_dxvk.sh" install

# prompt user to log in
echo
echo "Setup complete. Please log in to the FAF client."
echo "Additional configuration needs to be set in order to launch the game properly."
echo "When you are done logging in, please close the client and run './set-client-paths.sh'."
